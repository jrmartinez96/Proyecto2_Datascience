p3<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800001"][1]
p4<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800030"][2]
p5<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123811146"][1]
p6<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123660214"][1]
p7<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000001"][1]
p8<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000002"][1]
p9<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000003"][1]
p10<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000004"][1]
ps<-c(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)
axis(1, at=xx, labels=ps, tick=FALSE, las=2, line=-11, cex.axis=0.5)
p1<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1]
p1<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"]
p1
p1<-ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1]
p1
as.char(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1])
as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1])
?axis
p1<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1])
p2<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800080"][1])
p3<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800001"][1])
p4<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800030"][1])
p5<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123811146"][1])
p6<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123660214"][1])
p7<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000001"][1])
p8<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000002"][1])
p9<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000003"][1])
p10<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000004"][1])
ps<-c(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)
axis(1, at=xx, labels=ps, tick=FALSE, las=2, line=-11, cex.axis=0.5)
p1<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800056"][1])
p2<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800080"][1])
p3<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800001"][1])
p4<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123800030"][2])
p5<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123811146"][1])
p6<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4123660214"][1])
p7<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000001"][1])
p8<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000002"][1])
p9<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000003"][1])
p10<-as.character(ventas.centroamerica$Descripcion[ventas.centroamerica$Producto == "4130000004"][1])
ps<-c(p1,p2,p3,p4,p5,p6,p7,p8,p9,p10)
axis(1, at=xx, labels=ps, tick=FALSE, las=2, line=-11, cex.axis=0.5)
?axis
par(mar = c(5.1, 4.1, 4.1, 9.1), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), legend.text = yy, horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10),inset = inset = c(-0.5, -0.3),legend.text = yy, horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10),inset = c(-0.5, -0.3),legend.text = yy, horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), rownames(yy))
?legend
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), legend = yy)
par(mar = c(5.1, 5.1, 5.1, 9.1), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), legend = yy)
par(mar = c(7, 7, 7, 9.1), xpd = TRUE)
par(mar = c(7, 7, 7, 9.1), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
?mar
?par
par(mar = c(2, 2, 2, 4), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), legend = yy)
par(mar = c(4, 4, 4, 6), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), legend = yy)
par(mar = c(4, 4, 4, 9), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10), horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
legend("topright", inset = c(-0.5, -0.3), legend = yy)
?barplot
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10),legend.text = yy, horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
par(mar = c(4, 4, 4, 9), xpd = TRUE)
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10),legend.text = yy, horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(head(productos_ordenados, n = 10),legend.text = yy, args.legend=list(x=ncol(y) + 3,y=max(colSums(y)),bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend=list(x=ncol(productos_ordenados) + 3,y=max(colSums(productos_ordenados)),bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend=list(x=ncol(productos_ordenados) + 3,bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend=list(x=ncol(productos_ordenados) + 3,bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
par(mar = c(4, 4, 4, 9), xpd = TRUE)
productos_ordenados <- head(productos_ordenados, n=10)
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend=list(x=ncol(productos_ordenados) + 3,bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend=list(x=ncol(productos_ordenados),bty = "n"),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
axis(1, at=xx, labels=ps, tick=FALSE, las=2, cex.axis=0.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=6, cex.axis=0.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=1, cex.axis=0.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=-5, cex.axis=0.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
?axis
axis(1, at=NULL, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
xx
xx <- [1,2,3,4,5,6,7,8,10]
xx <- c(1,2,3,4,5,6,7,8,10)
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
xx <- c(1,2,3,4,5,6,7,8,10,9)
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
?axis
xx <- c(c(0.7,3),1.9,3.1,4,5.5,6.7,7.9,9.1,10.4,11.5)
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
xx <- c(0.7,1.9,3.1,4,5.5,6.7,7.9,9.1,10.4,11.5)
diez_mas_vendidos<-barplot(productos_ordenados,yaxt="n",legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
axis(1, at=xx, labels=ps, tick=FALSE, las=3, cex.axis=0.5)
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
text(diez_mas_vendidos, productos_ordenados/2, labels = ps)
?text
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, vertical = TRUE)
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, srt = 90)
?text
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, srt = 90, cex = 0.5)
head(productos_ordenados, n = 10)
as.vector(head(productos_ordenados, n = 10))
yy<-as.character(as.vector(head(productos_ordenados, n = 10)))
par(mar = c(4, 4, 4, 9), xpd = TRUE)
productos_ordenados <- head(productos_ordenados, n=10)
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, srt = 90, cex = 0.5)
categorias<-table(ventas.centroamerica$Categoria)
categorias
categorias
categorias
plot(categorias)
barplot(categorias)
barplot(head(categorias, n=10))
h1<-categorias[order(-categorias)]
h1
barplot(h1)
el_salvador <- read_excel("el_salvador.xlsx", range = "A2:AE6370")
nicaragua <- read_excel("nicaragua.xlsx", range = "A2:AE6374")
honduras <- read_excel("honduras.xlsx", range = "A2:AE6685")
guatemala <- read_excel("guatemala.xlsx",range = "A2:AE7719")
#Librerias
#Programa para juntar todos los xls en una tabla y exportar un RDATA
library("readxl")
library("readxl")
library("dplyr")
library(frequency)
library(rela)
library(psych)
library(FactoMineR)
library(corrplot)
library(NbClust)
library(fpc)
library(cluster)
library(fpc)
library(factoextra)
el_salvador <- read_excel("el_salvador.xlsx", range = "A2:AE6370")
nicaragua <- read_excel("nicaragua.xlsx", range = "A2:AE6374")
honduras <- read_excel("honduras.xlsx", range = "A2:AE6685")
guatemala <- read_excel("guatemala.xlsx",range = "A2:AE7719")
#en el salvador el nombre de la categoria conca se encuentra en minusculas, se transforma a mayúsculas
#para poder llevar a cabo sin problemas la función rbind
names(el_salvador)[names(el_salvador) == "conca"] <- "CONCA"
#Union de todas las tablas para crear un conjunto que represente a centroamérica
ventas.centroamerica<-rbind(guatemala,honduras,nicaragua,el_salvador)
# ------------------------ Proceso de limpieza de los datos ---------------------------
#Cambio de nombres a columnas
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..7"] <- "Pagina_cat"
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..22"] <- "Pagina"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..24"] <- "Porcentaje"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..26"] <- "Porcentaje"
#Arreglo nivel 210811 en categoría Año mes
ventas.centroamerica$`Año Mes` <- gsub("210811","201811",ventas.centroamerica$`Año Mes`)
#Quitar caracteres \r|\n de  columna descripcion
ventas.centroamerica$Descripcion <- gsub("\r|\n","",ventas.centroamerica$Descripcion)
#transformación en columna contingencia de Farma -> farma
ventas.centroamerica$Contingencia <- gsub("farma","Farma",ventas.centroamerica$Contingencia)
#Pagina | pagina derecha Pagina derecha, Pagina izquierda pagina izquierda
ventas.centroamerica$Pagina <- gsub("Pagina derecha","pagina derecha", ventas.centroamerica$Pagina)
ventas.centroamerica$Pagina <- gsub("Pagina izquierda","pagina izquierda", ventas.centroamerica$Pagina)
#Tipo Precio | intruduccion Introduccion, precio normal Precio Normal
ventas.centroamerica$`Tipo Precio` <- gsub("Introduccion","introduccion",ventas.centroamerica$`Tipo Precio`)
ventas.centroamerica$`Tipo Precio` <- gsub("Precio Normal","precio normal",ventas.centroamerica$`Tipo Precio`)
#Atributo Neto | No aplica No Aplica
ventas.centroamerica$`Atributo Neto`<- gsub("No Aplica", "No aplica", ventas.centroamerica$`Atributo Neto`)
#Energy Chart | cierre Cierre, oferta esencial Oferta esencial
ventas.centroamerica$`Energy Chart` <- gsub("Cierre","cierre", ventas.centroamerica$`Energy Chart`)
ventas.centroamerica$`Energy Chart` <- gsub("Oferta esencial","oferta esencial", ventas.centroamerica$`Energy Chart`)
#Promociones | 1 x 2 x 1 X 2 X , 2 x 2 x 2x 2x, contingencia Contingencia, Producto gratis producto gratis Producto Gratis,
#promocion precio Promocion precio Promocion Precio
ventas.centroamerica$Promociones <- gsub("1 X 2 X","1 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("2x 2x","2 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Contingencia","contingencia",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Producto gratis|Producto Gratis","producto gratis",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Promocion Precio|Promocion precio","promocion precio",ventas.centroamerica$Promociones)
#Treboles extra | si SI
ventas.centroamerica$`Treboles extra` <- gsub("SI","si",ventas.centroamerica$`Treboles extra`)
#Cambio de columnas de tipo char a factor
col_names <- c("Año Mes","Producto","Codigo Catalogo","CONCA","Tipo Comision","Pagina_cat","Descripcion","Categoria","Linea","Observaciones","Canal de Venta","Contingencia","Pagina","Tipo Precio","Atributo Neto","Energy Chart","Promociones","Recursos Especiales","Treboles extra")
ventas.centroamerica$Costo <- as.numeric(ventas.centroamerica$Costo)
ventas.centroamerica[col_names] <- lapply(ventas.centroamerica[col_names] , factor)
num <- unlist(lapply(ventas.centroamerica, is.numeric))
cat <- unlist(lapply(ventas.centroamerica, is.factor))
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
# variables categóricas de ventas.centroamericas
vccat <- ventas.centroamerica[,cat]
# Método de ward para determinar número adecuado de clusters con K-means
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Paquete para saber el mejor n?mero de clusters
nb <- NbClust(vcnum, distance = "euclidean", min.nc = 2,max.nc = 10, method = "complete", index ="all")
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
vcnum
na.omit(vcnum)
# Método de ward para determinar número adecuado de clusters con K-means
wss <- (nrow(na.omit(vcnum))-1)*sum(apply(na.omit(vcnum),2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(na.omit(vcnum), centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
View(vcnum)
# Método de ward para determinar número adecuado de clusters con K-means
vcnum <- vcnum[complete.cases(vcnum),]
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
vcnum
# Método de ward para determinar número adecuado de clusters con K-means
vcnum <- vcnum[complete.cases(vcnum),]
vcnum
View(vcnum)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
View(vcnum)
# Método de ward para determinar número adecuado de clusters con K-means
vcnum <- vcnum[complete.cases(vcnum),]
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
#Paquete para saber el mejor n?mero de clusters
nb <- NbClust(vcnum, distance = "euclidean", min.nc = 2,max.nc = 10, method = "complete", index ="all")
#Paquete para saber el mejor n?mero de clusters
nb <- NbClust(vcnum, distance = "euclidean", min.nc = 2,max.nc = 4, method = "complete", index ="all")
#Paquete para saber el mejor n?mero de clusters
nb <- NbClust(ventas.centroamerica, distance = "euclidean", min.nc = 2,max.nc = 4, method = "centroid")
#Paquete para saber el mejor n?mero de clusters
nb <- NbClust(vcnum, distance = "euclidean", min.nc = 2,max.nc = 4, method = "centroid")
wss
sum(apply(vcnum,2,var))
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,5,var))
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,1,var))
sum(apply(vcnum,1,var))
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,2,var))
?apply
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,1,var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,c(1,2),var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
wss <- (nrow(vcnum)-1)*sum(apply(vcnum,2,var))
for (i in 2:10)
wss[i] <- sum(kmeans(vcnum, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Number of Clusters",  ylab="Within groups sum of squares")
km<-kmeans(vcnum,3)
vcnum$grupo<-km$cluster
plotcluster(vcnum,km$cluster)
# gráficos que muestran la ubicación de cada cluster
plotcluster(vcnum,km$cluster)
cat_ordenadas<-categorias[order(-categorias)]
barplot(cat_ordenadas)
#Histograma de categoria pronostico
hist(ventas.centroamerica$Pronostico, col="blue", xlab="cantidad de ventas", main="Histograma pronostico de ventas")
View(ventas.centroamerica)
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, srt = 90, cex = 0.5)
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
text(diez_mas_vendidos, productos_ordenados/2, labels = ps, srt = 90, cex = 0.5)
vcnum <- vcnum[complete.cases(vcnum),]
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
library("readxl")
library("dplyr")
library(frequency)
library(rela)
library(psych)
library(FactoMineR)
library(corrplot)
library(NbClust)
library(fpc)
library(cluster)
library(fpc)
library(factoextra)
library(e1071)#para cmeans
# REGLAS DE ASOCIACI?N
library(arules)
# Unión de todos los datos individuales para lograr un conjunto centroamericano
el_salvador <- read_excel("el_salvador.xlsx", range = "A2:AE6370")
nicaragua <- read_excel("nicaragua.xlsx", range = "A2:AE6374")
honduras <- read_excel("honduras.xlsx", range = "A2:AE6685")
guatemala <- read_excel("guatemala.xlsx",range = "A2:AE7719")
#en el salvador el nombre de la categoria conca se encuentra en minusculas, se transforma a mayúsculas
#para poder llevar a cabo sin problemas la función rbind
names(el_salvador)[names(el_salvador) == "conca"] <- "CONCA"
#Union de todas las tablas para crear un conjunto que represente a centroamérica
ventas.centroamerica<-rbind(guatemala,honduras,nicaragua,el_salvador)
# ------------------------ Proceso de limpieza de los datos ---------------------------
#Cambio de nombres a columnas
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..7"] <- "Pagina_cat"
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..22"] <- "Pagina"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..24"] <- "Porcentaje"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..26"] <- "Porcentaje2"
#Arreglo nivel 210811 en categoría Año mes
ventas.centroamerica$`Año Mes` <- gsub("210811","201811",ventas.centroamerica$`Año Mes`)
#Quitar caracteres \r|\n de  columna descripcion
ventas.centroamerica$Descripcion <- gsub("\r|\n","",ventas.centroamerica$Descripcion)
#transformación en columna contingencia de Farma -> farma
ventas.centroamerica$Contingencia <- gsub("farma","Farma",ventas.centroamerica$Contingencia)
#Pagina | pagina derecha Pagina derecha, Pagina izquierda pagina izquierda
ventas.centroamerica$Pagina <- gsub("Pagina derecha","pagina derecha", ventas.centroamerica$Pagina)
ventas.centroamerica$Pagina <- gsub("Pagina izquierda","pagina izquierda", ventas.centroamerica$Pagina)
#Tipo Precio | intruduccion Introduccion, precio normal Precio Normal
ventas.centroamerica$`Tipo Precio` <- gsub("Introduccion","introduccion",ventas.centroamerica$`Tipo Precio`)
ventas.centroamerica$`Tipo Precio` <- gsub("Precio Normal","precio normal",ventas.centroamerica$`Tipo Precio`)
#Atributo Neto | No aplica No Aplica
ventas.centroamerica$`Atributo Neto`<- gsub("No Aplica", "No aplica", ventas.centroamerica$`Atributo Neto`)
#Energy Chart | cierre Cierre, oferta esencial Oferta esencial
ventas.centroamerica$`Energy Chart` <- gsub("Cierre","cierre", ventas.centroamerica$`Energy Chart`)
ventas.centroamerica$`Energy Chart` <- gsub("Oferta esencial","oferta esencial", ventas.centroamerica$`Energy Chart`)
#Promociones | 1 x 2 x 1 X 2 X , 2 x 2 x 2x 2x, contingencia Contingencia, Producto gratis producto gratis Producto Gratis,
#promocion precio Promocion precio Promocion Precio
ventas.centroamerica$Promociones <- gsub("1 X 2 X","1 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("2x 2x","2 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Contingencia","contingencia",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Producto gratis|Producto Gratis","producto gratis",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Promocion Precio|Promocion precio","promocion precio",ventas.centroamerica$Promociones)
#Treboles extra | si SI
ventas.centroamerica$`Treboles extra` <- gsub("SI","si",ventas.centroamerica$`Treboles extra`)
#Cambio de columnas de tipo char a factor
col_names <- c("Año Mes","Producto","Codigo Catalogo","CONCA","Tipo Comision","Pagina_cat","Descripcion","Categoria","Linea","Observaciones","Canal de Venta","Contingencia","Pagina","Tipo Precio","Atributo Neto","Energy Chart","Promociones","Recursos Especiales","Treboles extra")
ventas.centroamerica$Costo <- as.numeric(ventas.centroamerica$Costo)
ventas.centroamerica[col_
ventas.centroamerica[col_names] <- lapply(ventas.centroamerica[col_names] , factor)
ventas.centroamerica[col_names] <- lapply(ventas.centroamerica[col_names] , factor)
ventas.centroamerica$Costo <- as.numeric(ventas.centroamerica$Costo)
ventas.centroamerica[col_names] <- lapply(ventas.centroamerica[col_names] , factor)
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
vcnum <- vcnum[complete.cases(vcnum),]
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
vcnum <- vcnum[complete.cases(vcnum),]
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(vcnum))
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafvcnum)
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafDatos)
summary(pafDatos)
#Se debe analizar si se puede usar el análisis factorial
#para formar las combinaciones lineales de las variables
pafDatos<-paf(as.matrix(datos[,2:8]))
summary(pafvcnum)
# Nivel de significación de la prueba
cortest.bartlett(vcnum)
# Se normalizan los datos para hacer el PCA
compPrinc<-prcomp(vcnum, scale = TRUE)
summary(compPrinc)
fviz_pca_var(compPrinc, col.var = "cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=ncol(vcnum), scale.unit = T)
summary(vcnumPCA)
# Se obtiene la representación de cada variable en cada componente
var<-get_pca_var(vcnumPCA)
corrplot(var$cos2, is.corr = F)
vcnum
View(vcnum)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(vcnum))
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafvcnum)
# Nivel de significación de la prueba
cortest.bartlett(vcnum)
# Se normalizan los datos para hacer el PCA
compPrinc<-prcomp(vcnum, scale = TRUE)
summary(compPrinc)
summary(compPrinc)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(ventas.centroamerica))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(as.numeric(ventas.centroamerica))
paf(as.matrix(vcnum))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(as.numeric(ventas.centroamerica))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(as.matrix(as.numeric(ventas.centroamerica)))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(ventas.centroamerica)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(as.matrix.data.frame(ventas.centroamerica))
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(num)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
paf(as.matrix(num))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
num<-as.matrix(num)
paf(num)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
num<-as.numeric(num)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
str(ventas.centroamerica$`Pedido Real`)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
str(as.factor(ventas.centroamerica$`Pedido Real`))
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
as.factor(ventas.centroamerica$`Pedido Real`)
ventas.centroamerica
View(ventas.centroamerica)
ventas.centroamerica[is.na(ventas.centroamerica)]
ventas.centroamerica[is.na(ventas.centroamerica),]
View(ventas.centroamerica[is.na(ventas.centroamerica),])
View(ventas.centroamerica[ventas.centroamerica == NA,])
#Union de todas las tablas para crear un conjunto que represente a centroamérica
ventas.centroamerica<-rbind(guatemala,honduras,nicaragua,el_salvador)
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..7"] <- "Pagina_cat"
names(ventas.centroamerica)[names(ventas.centroamerica) == "Pagina..22"] <- "Pagina"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..24"] <- "Porcentaje"
names(ventas.centroamerica)[names(ventas.centroamerica) == "%..26"] <- "Porcentaje2"
#Arreglo nivel 210811 en categoría Año mes
ventas.centroamerica$`Año Mes` <- gsub("210811","201811",ventas.centroamerica$`Año Mes`)
#Quitar caracteres \r|\n de  columna descripcion
ventas.centroamerica$Descripcion <- gsub("\r|\n","",ventas.centroamerica$Descripcion)
#transformación en columna contingencia de Farma -> farma
ventas.centroamerica$Contingencia <- gsub("farma","Farma",ventas.centroamerica$Contingencia)
#Pagina | pagina derecha Pagina derecha, Pagina izquierda pagina izquierda
ventas.centroamerica$Pagina <- gsub("Pagina derecha","pagina derecha", ventas.centroamerica$Pagina)
ventas.centroamerica$Pagina <- gsub("Pagina izquierda","pagina izquierda", ventas.centroamerica$Pagina)
#Tipo Precio | intruduccion Introduccion, precio normal Precio Normal
ventas.centroamerica$`Tipo Precio` <- gsub("Introduccion","introduccion",ventas.centroamerica$`Tipo Precio`)
ventas.centroamerica$`Tipo Precio` <- gsub("Precio Normal","precio normal",ventas.centroamerica$`Tipo Precio`)
#Atributo Neto | No aplica No Aplica
ventas.centroamerica$`Atributo Neto`<- gsub("No Aplica", "No aplica", ventas.centroamerica$`Atributo Neto`)
#Energy Chart | cierre Cierre, oferta esencial Oferta esencial
ventas.centroamerica$`Energy Chart` <- gsub("Cierre","cierre", ventas.centroamerica$`Energy Chart`)
ventas.centroamerica$`Energy Chart` <- gsub("Oferta esencial","oferta esencial", ventas.centroamerica$`Energy Chart`)
#Promociones | 1 x 2 x 1 X 2 X , 2 x 2 x 2x 2x, contingencia Contingencia, Producto gratis producto gratis Producto Gratis,
#promocion precio Promocion precio Promocion Precio
ventas.centroamerica$Promociones <- gsub("1 X 2 X","1 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("2x 2x","2 x 2 x",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Contingencia","contingencia",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Producto gratis|Producto Gratis","producto gratis",ventas.centroamerica$Promociones)
ventas.centroamerica$Promociones <- gsub("Promocion Precio|Promocion precio","promocion precio",ventas.centroamerica$Promociones)
#Treboles extra | si SI
ventas.centroamerica$`Treboles extra` <- gsub("SI","si",ventas.centroamerica$`Treboles extra`)
#Cambio de columnas de tipo char a factor
col_names <- c("Año Mes","Producto","Codigo Catalogo","CONCA","Tipo Comision","Pagina_cat","Descripcion","Categoria","Linea","Observaciones","Canal de Venta","Contingencia","Pagina","Tipo Precio","Atributo Neto","Energy Chart","Promociones","Recursos Especiales","Treboles extra")
ventas.centroamerica$Costo <- as.numeric(ventas.centroamerica$Costo)
ventas.centroamerica[col_names] <- lapply(ventas.centroamerica[col_names] , factor)
View(ventas.centroamerica[ventas.centroamerica == NA,])
View(ventas.centroamerica)
View(ventas.centroamerica)
View(ventas.centroamerica[ventas.centroamerica$Producto == NA,])
View(ventas.centroamerica)
any(is.na(ventas.centroamerica$Producto))
which(is.na(ventas.centroamerica$Producto) == TRUE, arr.ind=TRUE)
str(ventas.centroamerica$Producto)
summary(ventas.centroamerica$Producto)
summary(ventas.centroamerica$Producto)
which(is.na(ventas.centroamerica$Producto) == TRUE, arr.ind=TRUE)
ventas.centroamerica[max(ventas.centroamerica$`Unidades Vendidas`),]
ventas.centroamerica[max(ventas.centroamerica$`Unidades Vendidas`)]
ventas.centroamerica[,max(ventas.centroamerica$`Unidades Vendidas`)]
max(ventas.centroamerica$`Unidades Vendidas`)
ventas.centroamerica[ventas.centroamerica$`Unidades Vendidas` == 51957]
ventas.centroamerica$Producto[ventas.centroamerica$`Unidades Vendidas` == 51957]
freq(ventas.centroamerica$`Unidades Vendidas`)
max(ventas.centroamerica$`Unidades Vendidas`)
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` = 51947]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == 51947]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` > 51947]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` > 51947,]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"][0]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"][1]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"][10]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"][2]
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"]
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"]
summary(UnidadMasPedida)
summary(UnidadMasPedida)
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == "51947"]
View(UnidadMasPedida)
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == 51947]
View(UnidadMasPedida)
ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == 51947]
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == -1213]
View(UnidadMasPedida)
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Unidades Vendidas` == 51957]
View(UnidadMasPedida)
UnidadMasPedida<-ventas.centroamerica$Descripcion[ventas.centroamerica$`Pedido Real` == 14527]
View(UnidadMasPedida)

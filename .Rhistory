grep("2011", datosPCA$`Año Mes`)
grep("2001", datosPCA$`Año Mes`)
ventas2018$AnioNuevo<-2018
View(ventas2018)
ventas2019$AnioNuevo<-2019
View(ventas2019)
View(ventas2018)
grep("201801", ventas2018$`Año Mes`)
View(ventas2018)
ventas2018[grep("201801", ventas2018$`Año Mes`),]
View(ventas2018[grep("201801", ventas2018$`Año Mes`),])
ventas2018$MesNuevo
View(ventas2018)
ventas2018$MesNuevo = 0
View(ventas2018)
ventas2018[grep("201801", ventas2018$`Año Mes`),]
hola<ventas2018[grep("201801", ventas2018$`Año Mes`),]
hola<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
hola$MesNuevo <- 1
View(ventas2018)
hola<-ventas2018[grep("201802", ventas2018$`Año Mes`),]
hola$MesNuevo <- 2
#####
View(ventas2018)
#####
View(hola)
hola<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
hola$MesNuevo <- 1
ene<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
ene$MesNuevo <- 1
ene$MesNuevo <- 1
ene<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2018[grep("201802", ventas2018$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2018[grep("201803", ventas2018$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2018[grep("201804", ventas2018$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2018[grep("201805", ventas2018$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2018[grep("201806", ventas2018$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2018[grep("201807", ventas2018$`Año Mes`),]
jul$MesNuevo <- 7
ago<-ventas2018[grep("201808", ventas2018$`Año Mes`),]
ago$MesNuevo <- 8
sep<-ventas2018[grep("201809", ventas2018$`Año Mes`),]
sep$MesNuevo <- 9
oct<-ventas2018[grep("201810", ventas2018$`Año Mes`),]
oct$MesNuevo <- 10
nov<-ventas2018[grep("201811", ventas2018$`Año Mes`),]
nov$MesNuevo <- 11
dic<-ventas2018[grep("201812", ventas2018$`Año Mes`),]
dic$MesNuevo <- 12
View(ventas.centroamerica)
ventas2018<-rbind(ene,feb,mar,abr,may,jum,jul,ago,sep,oct,nov,dic)
ventas2018<-rbind(ene,feb,mar,abr,may,jun,jul,ago,sep,oct,nov,dic)
View(ventas2018)
datosPCA<-ventas.centroamerica[c(1,2,3,4,7, 9:18,24,26 )]
datosPCA[datosPCA$`Año Mes` %like% "2018%", ]
ventas2018<-datosPCA[grep("2018", datosPCA$`Año Mes`),]
ventas2019<-datosPCA[grep("2019", datosPCA$`Año Mes`),]
View(ventas2018)
View(ventas2019)
View(ventas2019)
ventas2018$AnioNuevo=2018
ventas2019$AnioNuevo=2019
View(ventas2018)
ventas2018$AnioNuevo=numeric(2018)
ventas2018<-datosPCA[grep("2018", datosPCA$`Año Mes`),]
ventas2019<-datosPCA[grep("2019", datosPCA$`Año Mes`),]
ventas2018$AnioNuevo=numeric(2018)
ventas2018$AnioNuevo=as.numeric(2018)
View(ventas2018)
ventas2018$AnioNuevo <- as.numeric(ventas2018$AnioNuevo)
View(ventas2018)
ventas2018<-datosPCA[grep("2018", datosPCA$`Año Mes`),]
ventas2019<-datosPCA[grep("2019", datosPCA$`Año Mes`),]
ventas2018$AnioNuevo<-integer(2018)
ventas2018<-datosPCA[grep("2018", datosPCA$`Año Mes`),]
ventas2018$AnioNuevo<-integer(2018)
ventas2018$AnioNuevo=integer(2018)
ventas2018$AnioNuevo=2018
ventas2018$AnioNuevo <- as.numeric(ventas2018$AnioNuevo)
View(ventas2018)
summary(ventas2018)
str(ventas2018)
ventas2019$AnioNuevo=2019
ene<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2018[grep("201802", ventas2018$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2018[grep("201803", ventas2018$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2018[grep("201804", ventas2018$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2018[grep("201805", ventas2018$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2018[grep("201806", ventas2018$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2018[grep("201807", ventas2018$`Año Mes`),]
jul$MesNuevo <- 7
ago<-ventas2018[grep("201808", ventas2018$`Año Mes`),]
ago$MesNuevo <- 8
sep<-ventas2018[grep("201809", ventas2018$`Año Mes`),]
sep$MesNuevo <- 9
oct<-ventas2018[grep("201810", ventas2018$`Año Mes`),]
oct$MesNuevo <- 10
nov<-ventas2018[grep("201811", ventas2018$`Año Mes`),]
nov$MesNuevo <- 11
dic<-ventas2018[grep("201812", ventas2018$`Año Mes`),]
dic$MesNuevo <- 12
ventas2018<-rbind(ene,feb,mar,abr,may,jun,jul,ago,sep,oct,nov,dic)
ene<-ventas2019[grep("201801", ventas2019$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2019[grep("201802", ventas2019$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2019[grep("201803", ventas2019$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2019[grep("201804", ventas2019$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2019[grep("201805", ventas2019$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2019[grep("201806", ventas2019$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2019[grep("201807", ventas2019$`Año Mes`),]
jul$MesNuevo <- 7
ago<-ventas2019[grep("201808", ventas2019$`Año Mes`),]
ago$MesNuevo <- 8
sep<-ventas2019[grep("201809", ventas2019$`Año Mes`),]
sep$MesNuevo <- 9
oct<-ventas2019[grep("201810", ventas2019$`Año Mes`),]
oct$MesNuevo <- 10
nov<-ventas2019[grep("201811", ventas2019$`Año Mes`),]
nov$MesNuevo <- 11
dic<-ventas2019[grep("201812", ventas2019$`Año Mes`),]
dic$MesNuevo <- 12
ene<-ventas2019[grep("201801", ventas2019$`Año Mes`),]
ene$MesNuevo <- 1
View(ventas2018)
ene<-ventas2019[grep("201901", ventas2019$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2019[grep("201902", ventas2019$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2019[grep("201903", ventas2019$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2019[grep("201904", ventas2019$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2019[grep("201905", ventas2019$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2019[grep("201906", ventas2019$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2019[grep("201907", ventas2019$`Año Mes`),]
jul$MesNuevo <- 7
View(ventas2019)
ventas2019<rbind(ene,feb,mar,abr,may,jun,jul)
ventas2019<-rbind(ene,feb,mar,abr,may,jun,jul)
View(ventas2019)
ventas2018<-datosPCA[grep("2018", datosPCA$`Año Mes`),]
ventas2019<-datosPCA[grep("2019", datosPCA$`Año Mes`),]
ventas2018$AnioNuevo<- 2018
ventas2019$AnioNuevo<- 2019
ene<-ventas2018[grep("201801", ventas2018$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2018[grep("201802", ventas2018$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2018[grep("201803", ventas2018$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2018[grep("201804", ventas2018$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2018[grep("201805", ventas2018$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2018[grep("201806", ventas2018$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2018[grep("201807", ventas2018$`Año Mes`),]
jul$MesNuevo <- 7
ago<-ventas2018[grep("201808", ventas2018$`Año Mes`),]
ago$MesNuevo <- 8
sep<-ventas2018[grep("201809", ventas2018$`Año Mes`),]
sep$MesNuevo <- 9
oct<-ventas2018[grep("201810", ventas2018$`Año Mes`),]
oct$MesNuevo <- 10
nov<-ventas2018[grep("201811", ventas2018$`Año Mes`),]
nov$MesNuevo <- 11
dic<-ventas2018[grep("201812", ventas2018$`Año Mes`),]
dic$MesNuevo <- 12
ventas2018<-rbind(ene,feb,mar,abr,may,jun,jul,ago,sep,oct,nov,dic)
ene<-ventas2019[grep("201901", ventas2019$`Año Mes`),]
ene$MesNuevo <- 1
feb<-ventas2019[grep("201902", ventas2019$`Año Mes`),]
feb$MesNuevo <- 2
mar<-ventas2019[grep("201903", ventas2019$`Año Mes`),]
mar$MesNuevo <- 3
abr<-ventas2019[grep("201904", ventas2019$`Año Mes`),]
abr$MesNuevo <- 4
may<-ventas2019[grep("201905", ventas2019$`Año Mes`),]
may$MesNuevo <- 5
jun<-ventas2019[grep("201906", ventas2019$`Año Mes`),]
jun$MesNuevo <- 6
jul<-ventas2019[grep("201907", ventas2019$`Año Mes`),]
jul$MesNuevo <- 7
ventas2019<-rbind(ene,feb,mar,abr,may,jun,jul)
View(ventas2018)
View(ventas2019)
View(ventas2018)
ventas2018[c(2:19)]
View(ventas2018[c(2:19)])
ventas2018<-ventas2018[c(2:19)]
ventas2019<-ventas2019[c(2:19)]
View(ventas2018)
View(ventas2019)
View(ventas2018)
mean(is.na(ventas2018))
mean(is.na(ventas2019))
mean(is.na(ventas.centroamerica))
print(mean(is.na(ventas2018)))
print(mean(is.na(ventas2018))*100)
print(100*mean(is.na(ventas2018))+"%")
print(100*mean(is.na(ventas2018))"%")
print(100*mean(is.na(ventas2018)))
100*mean(is.na(ventas2018))
100*mean(is.na(ventas2019))
ventas2018[complete.cases(ventas2018),]
ventas2018SinNA<-ventas2018[complete.cases(ventas2018),]
View(ventas2018SinNA)
View(ventas2018)
ventas2018SinNA<-ventas2018[na.omit(ventas2018),]
ventas2018SinNA<-ventas2018[na.omit(ventas2018)]
ventas2018SinNA<-na.omit(ventas2018)
View(ventas2018SinNA)
ventas2019SinNA<-na.omit(ventas2019)
datosPCA<-rbind(ventas2018SinNA,ventas2019SinNA)
datosPCA2<-rbind(ventas2018,ventas2019)
PCA<-prcomp(datosPCA)
View(datosPCA)
View(datosPCA)
datosPCA$Producto <- as.numeric(as.character(datosPCA$Producto))
View(datosPCA)
datosPCA<-rbind(ventas2018SinNA,ventas2019SinNA)
View(datosPCA)
datosPCA$Producto <- as.numeric(as.character(datosPCA$Producto))
View(datosPCA)
View(datosPCA)
datosPCA$Producto <- as.numeric(as.character(datosPCA$Producto))
datosPCA$CONCA <- as.numeric(as.character(datosPCA$CONCA))
datosPCA$`Codigo Catalogo` <- as.numeric(as.character(datosPCA$`Codigo Catalogo`))
datosPCA$Pagina_cat <- as.numeric(as.character(datosPCA$Pagina_cat))
PCA<-prcomp(datosPCA)
PCA
summary(PCA)
datosPCA2$Producto <- as.numeric(as.character(datosPCA2$Producto))
datosPCA2$CONCA <- as.numeric(as.character(datosPCA2$CONCA))
datosPCA2$`Codigo Catalogo` <- as.numeric(as.character(datosPCA$2`Codigo Catalogo`))
datosPCA2$`Codigo Catalogo` <- as.numeric(as.character(datosPCA2$`Codigo Catalogo`))
datosPCA2$Pagina_cat <- as.numeric(as.character(datosPCA2$Pagina_cat))
PCA2<-prcomp(datosPC2)
PCA2<-prcomp(datosPCA2)
PCA<-prcomp(datosPCA[c(3:18)])
summary(PCA)
PCA<-prcomp(datosPCA[c(3:6,8:18)])
summary(PCA)
PCA<-prcomp(datosPCA[c(3:5,8:18)])
summary(PCA)
PCA2<-prcomp(datosPCA2)
PCA2<-prcomp(na.omit(PCA2))
PCA2<-prcomp(na.omit(datosPCA2))
summary(PCA2)
PCA<-prcomp(datosPCA)
PCA2<-prcomp(datosPCA2)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
# variables numéricas de ventas.centroamerica
vcnum <- ventas.centroamerica[,num]
vcnum <- vcnum[complete.cases(vcnum),]
names(vcnum)[12] <- "Porcentaje2"
vcnum <- vcnum[complete.cases(vcnum),]
vcnum <- vcnum[complete.cases(vcnum),]
names(vcnum)[12] <- "Porcentaje2"
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(vcnum))
library("readxl")
library("dplyr")
library(frequency)
library(rela)
library(psych)
library(FactoMineR)
library(corrplot)
library(NbClust)
library(fpc)
library(cluster)
library(fpc)
library(factoextra)
library(e1071)#para cmeans
# REGLAS DE ASOCIACI?N
library(arules)
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(vcnum))
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafvcnum)
pafvcnum
pafvcnum$Correlation
# Nivel de significación de la prueba
cortest.bartlett(vcnum)
# Se normalizan los datos para hacer el PCA
compPrinc<-prcomp(vcnum, scale = TRUE)
summary(compPrinc)
fviz_pca_var(compPrinc, col.var = "cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=ncol(vcnum), scale.unit = T)
summary(vcnumPCA)
?PCA
ncol(vcnum)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=7, scale.unit = T)
summary(vcnumPCA)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=6, scale.unit = T)
summary(vcnumPCA)
ncol(vcnum)
names(vcnum)
names(vcnum)[1:7]
# Se obtiene la representación de cada variable en cada componente
var<-get_pca_var(vcnumPCA)
corrplot(var$cos2, is.corr = F)
############################################ PCA ############################################
vcnum
############################################ PCA ############################################
View(vcnum)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
View(num)
cat <- unlist(lapply(ventas.centroamerica, is.factor))
# variables numéricas de ventas.centroamerica
ventas.centroamerica$Producto<-as.numeric(as.character(ventas.centroamerica$Producto))
ventas.centroamerica$Pagina
ventas.centroamerica$Pagina<-as.numeric(as.character(ventas.centroamerica$Pagina))
ventas.centroamerica$Pagina
View(ventas.centroamerica$Pagina)
View(ventas.centroamerica
View(ventas.centroamerica)
View(ventas.centroamerica)
(1!is.na(ventas.centroamerica$Pagina))
(!is.na(ventas.centroamerica$Pagina))
which(!is.na(ventas.centroamerica$Pagina))
which(is.na(ventas.centroamerica$Pagina))
View(ventas.centroamerica$Pagina_cat)
View(ventas.centroamerica$Pagina_cat)
ventas.centroamerica$Pagina_cat<-as.numeric(as.character(ventas.centroamerica$Pagina_cat))
View(ventas.centroamerica)
ventas.centroamerica$`Codigo Catalogo`<-as.numeric(as.character(ventas.centroamerica$`Codigo Catalogo`))
View(ventas.centroamerica)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
vcnum <- ventas.centroamerica[,num]
vcnum <- vcnum[complete.cases(vcnum),]
############################################ PCA ############################################
View(vcnum)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
cat <- unlist(lapply(ventas.centroamerica, is.factor))
# variables numéricas de ventas.centroamerica
ventas.centroamerica$Producto<-as.numeric(as.character(ventas.centroamerica$Producto))
ventas.centroamerica$Pagina_cat<-as.numeric(as.character(ventas.centroamerica$Pagina_cat))
ventas.centroamerica$`Codigo Catalogo`<-as.numeric(as.character(ventas.centroamerica$`Codigo Catalogo`))
vcnum <- ventas.centroamerica[,num]
vcnum <- vcnum[complete.cases(vcnum),]
View(vcnum)
str(vcnum)
# separación de variables numéricas de las categóricas
num <- unlist(lapply(ventas.centroamerica, is.numeric))
num
# variables numéricas de ventas.centroamerica
ventas.centroamerica$Producto<-as.numeric(as.character(ventas.centroamerica$Producto))
ventas.centroamerica$Pagina_cat<-as.numeric(as.character(ventas.centroamerica$Pagina_cat))
ventas.centroamerica$`Codigo Catalogo`<-as.numeric(as.character(ventas.centroamerica$`Codigo Catalogo`))
vcnum <- ventas.centroamerica[,num]
vcnum
View(vcnum)
vcnum <- vcnum[complete.cases(vcnum),]
View(vcnum)
vcnum <- ventas.centroamerica[,num]
View(vcnum)
vcnum <- na.omit(vcnum)
View(vcnum)
vcnum <- ventas.centroamerica[,num]
View(vcnum)
na.omit(vcnum)
complete.cases(vcnum)
View(vcnum)
############################################ PCA ############################################
View(vcnum)
vcnum[complete.cases(vcnum),]
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
pafvcnum<-paf(as.matrix(vcnum))
# names(vcnum)[12] <- "Porcentaje2"
# vcnum <- vcnum[complete.cases(vcnum),]
# Analizar si se puede usar el análisis factorial para formar combinaciones lineales de las variables
vcnum$Pagina<-NULL
pafvcnum<-paf(as.matrix(vcnum))
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafvcnum)
pafvcnum$Correlation
# Nivel de significación de la prueba
cortest.bartlett(vcnum)
# Se normalizan los datos para hacer el PCA
compPrinc<-prcomp(vcnum, scale = TRUE)
# Se normalizan los datos para hacer el PCA
compPrinc<-prcomp(na.omit(vcnum), scale = TRUE)
summary(compPrinc)
fviz_pca_var(compPrinc, col.var = "cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=6, scale.unit = T)
names(vcnum)[1:10]
summary(vcnumPCA)
# Se obtiene la representación de cada variable en cada componente
var<-get_pca_var(vcnumPCA)
corrplot(var$cos2, is.corr = F)
# Se hace el PCA
vcnumPCA<-PCA(vcnum,ncp=10, scale.unit = T)
names(vcnum)[1:10]
summary(vcnumPCA)
# Se obtiene la representación de cada variable en cada componente
var<-get_pca_var(vcnumPCA)
corrplot(var$cos2, is.corr = F)
fviz_pca_var(compPrinc, col.var = "cos2",gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE)
summary(compPrinc)
names(vcnum)[1:10]
# Se obtiene la representación de cada variable en cada componente
var<-get_pca_var(vcnumPCA)
corrplot(var$cos2, is.corr = F)
pafvcnum$KMO
pafvcnum$Bartlett
summary(pafvcnum)
summary(pafvcnum)
sum(el_salvador$`Unidades Vendidas`)
sum(nicaragua$`Unidades Vendidas`)
sum(honduras$`Unidades Vendidas`)
sum(guatemala$`Unidades Vendidas`)
ventasPpais<-c(3206412, 3206412, 3586348, 5210613)
ventasPpais<-c(3206412, 3206412, 3586348, 5210613)
ventasPpais<-c(3206412, 3206412, 3586348, 5210613)
barplot(ventasPpais)
barplot(ventasPpais, main = "Ventas por Pais")
nombres<-c("El Salvador", "Nicaragua", "Honduras", "Guatemala")
barplot(ventasPpais, main = "Ventas por Pais", names.arg = nombres)
axis(1, at=xx, labels=ps, tick=FALSE, las=2, line=-3, cex.axis=0.5)
#Grafico de los 10 productos mas vendidos
productos<-table(ventas.centroamerica$Producto)
productos_ordenados<-productos[order(-productos)]
#Cantidad de cuantos se vendieron de los 10 productos mas vendidos
yy<-as.character(as.vector(head(productos_ordenados, n = 10)))
#Ajustamos margenes para el grafico
par(mar = c(4, 4, 4, 9), xpd = TRUE)
#Obtenemos los 10 productos mas vendidos
productos_ordenados <- head(productos_ordenados, n=10)
#Lo graficamos
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
#Grafico de los 10 productos mas vendidos
productos<-table(ventas.centroamerica$`Unidades Vendidas`)
#Lo graficamos
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
productos<-table(ventas.centroamerica$`Unidades Vendidas`)
productos_ordenados<-productos[order(-productos)]
#Cantidad de cuantos se vendieron de los 10 productos mas vendidos
yy<-as.character(as.vector(head(productos_ordenados, n = 10)))
#Ajustamos margenes para el grafico
par(mar = c(4, 4, 4, 9), xpd = TRUE)
#Obtenemos los 10 productos mas vendidos
productos_ordenados <- head(productos_ordenados, n=10)
#Lo graficamos
diez_mas_vendidos<-barplot(productos_ordenados,legend.text = yy, args.legend = list(x = "topright", bty = "n", inset=c(-0.15, 0)),horiz = FALSE, main = "PRODUCTOS MAS VENDIDOS", col = c("darkseagreen","darkseagreen1","darkseagreen2","darkseagreen3","darkseagreen4","darkslategray1","darkslategray2","darkslategray3","darkslategray4","grey"))
str(ventas.centroamerica$`Unidades Vendidas`)
max(ventas.centroamerica$`Unidades Vendidas`)
productos[order(-productos)]
max(ventas.centroamerica$`Unidades Vendidas`)
View(ventas.centroamerica)
ventas.centroamerica[ventas.centroamerica$Producto]
ventas.centroamerica[ventas.centroamerica$Producto,]
ventas.centroamerica[ventas.centroamerica$Producto == "4123800056"]
ventas.centroamerica[ventas.centroamerica$Producto == "4123800056",]
nrow(ventas.centroamerica[ventas.centroamerica$Producto == "4123800056",])
(ventas.centroamerica[ventas.centroamerica$Producto == "4123800056",])
p1<-(ventas.centroamerica[ventas.centroamerica$Producto == "4123800056",])
sum(p1$`Unidades Vendidas`)
View(p1)
na.omit(p1$`Unidades Vendidas`)
sum(p1$`Unidades Vendidas`)
View(p1)
sum(el_salvador$`Unidades Vendidas`)
sum(nicaragua$`Unidades Vendidas`)
sum(honduras$`Unidades Vendidas`)
sum(guatemala$`Unidades Vendidas`)
View(nicaragua)
nica2<-read_excel("Paginacion 2015-2019.xlsx")
#Librerias
#Programa para juntar todos los xls en una tabla y exportar un RDATA
library("readxl")
nica2<-read_excel("Paginacion 2015-2019.xlsx")
View(nica2)
#Grafica de canales de venta
h1<-ventas.centroamerica$`Canal de Venta`
h1
plot(h1, main = "CANAL DE VENTA EN C.A.")
nrow(ventas.centroamerica$Margen < 0)
nrow(ventas.centroamerica$Margen <= 0)
ventas.centroamerica$Margen <= 0
table(ventas.centroamerica$Margen <= 0)
table(ventas.centroamerica$Margen < 0)
table(ventas.centroamerica$`Recursos Especiales`)
